Всем привет!
Сегодня мы с вами поговорим про такую вещь как Flamegraph
и про то как сильно он может облегчить вам жизнь.

(1. About author)
Прежде всего, пару слов о себе
Меня зовут Дима, я работаю в ЕПАМе последние полтора года, на проекте Fidor,
на данный момент в основном пишу на руби

А то что вы сейчас видите на слайде собственно и есть Flamegraph

(2. So why Flamegraph?)
Так почему же я решил сегодня рассказать про Flamegraph ?

Дело в том, что за время моей работы на последних нескольких проектах мне не раз приходилось сталкиваться
с проблемами производительности, и когда я узнал про Flamegraph - он мне сильно помог.

И помог он не только мне - сам Автор Флэймграфа (его изначальной имплементации для C++) -
Brendan Gregg, человек который на данный момент
"senior performance architect at Netflix"
Вообще, я слышал что как минимум в нэтфликсе и в яндексе его используют ребята периодически и очень довольны.

Почему, почему они все довольны? Что в нём такого?
Ну смотрите

Представьте что определённый кусок кода в вашей системе работает медленно
Кусок кода достаточно большой, в нём достаточно много кода,
и ваша задача - ускорить время его выполнения

Вы проводите сэмплинг..
Для тех кто не в курсе - сэмплинг - это когда вы запускаете ваш кусок кода,
и профайлер через равные, очень маленькие интервалы времени делает снапшот текущего стэктрэйса

Так вот, вы проводите сэмплинг.. и получаете вот такую картинку:
(картинка 1 - ЗАМЕНИТЬ НА ЛУЧШУЮ)

В данном конкретном случае это результат сэмплинга какого-то баш скрипта,
потому что я, как отъявленный лентяй, взял несколько отличных картинок из интернета,

НО ЭТО НЕ ВАЖНО, это мог бы быть результат сэмплинга участка кода вашей программы

Насколько это читаемо? Можно ли в этом разобраться?
Нет. В этом нереально разобраться за адекватное количество времени.

А вот как этот же результат сэмплинга отображает Flamegraph:
(картинка 2)

Сравните ещё раз:
Это
и вот это
Было
Стало

Флэймграф НАМНОГО удобней для восприятия,
мне на данный момент за две-три секунды становится понятно в какое место кода нужно смотреть
Главное - это понять принципы по которым он строится, и научиться его читать, о чём я сейчас и расскажу.

Сначала я приведу немного теории на слайдах, потом мы с вами поиграем в небольшой квиз,
а в конце будет несколько реальных примеров из реальных проектов

(How it works)
https://www.slideshare.net/brendangregg/blazing-performance-with-flame-graphs

(пересказать слайды 29-36)

(Quiz time!)
А теперь, я надеюсь что вам стало немного понятней,
но чтобы проверить и закрепить эти знания - мы с вами немного поиграем в вопрос-ответ
Я покажу вам несколько простейших флэймграфов, а вы постараетесь ответить на мои вопросы
Кто считает что знает ответ - поднимает руку, мы дадим вам микрофон
В конце техтолка мы наградим челвоека давшего больше всего правильных ответов (ТУТ НУЖНО ПОДУМАТЬ)

https://www.slideshare.net/brendangregg/blazing-performance-with-flame-graphs, слайды 38-48

(Time for real, interactive (?) examples!)
Хорошо, а теперь, после того как вы немного взбодрились,
настало время посмотреть на то как это работает в жизни

Пример 1 - 5 минут (готов)

Пример 2 - 5 минут (что-нибудь на отсутствующий индекс или на n+1)

Пример 3 - 5 минут (что-нибудь на кэширование)


Как видите, в каждом примере нам понадобилось всего несколько секунд,
чтобы разобраться, какой участок кода "тормозит", и исправить его


P.S.
Flamegraph для вашего ЯП (2-4 мин, с веселой историей или без, в зависимости от настроения публики)